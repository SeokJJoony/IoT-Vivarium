*아두이노에서 멀티쓰레드 구현
쓰레드 : 프로그래밍에서의 쓰레드란 프로세서를 수행하는 하나의 일의 흐름을 말함.
세마포어 : 멀티나 그 이상의 쓰레드 사용시 데이터를 동시에 사용하지 못하는 문제점이 발생
              세마포어란 데이터를 사용할 수 있는 하나의 열쇠라고 생각하면 됨.
              세마포어를 주고받아 서로 다른 쓰레드가 데이터를 번갈아 사용
 
아두이노 IDE는 기본적으로 싱글쓰레드이기 때문에 같은 시간동안 하나의 명령어만 처리가 가능.
이 때문에 상당히 제한적이고 막히는 부분이 굉장히 많았음 ;;
 
 내가 느낀 아두이노 개발 시 문제점들
1) delay함수에 의한 지연때문에 여러개의 동작을 구현하는데 문제가 많았음
2) millis 함수로 시간차를 두어 지연을 극복하였지만 멀티쓰레드가 불가능하여
   중간에 씹히는 시간이 있어 앱과의 통신에 문제가 있었음
3) 타이머 인터럽트 및 외부 인터럽트로 앱과의 통신으로 시간이 씹히는 문제를 보완하였으나
   외부 인터럽트에서의 delay가 조금 있었음

이러한 문제점을 보완하기 위해 FreeRtos라이브러리를 아두이노 스케치에 추가하여 사용하고자 함.
FreeRtos 라이브러리 함수들
1) xTaskCreate() : 각각의 task를 만드는 함수
-> xTaskCreate(taskFunction, 테스크이름, 사용할 스택크기, 함수 실행 시 넘겨줄 인자,테스크 우선 순위,테스크 핸들)
   ex)  xTaskCreate(t1_Main, NULL, configMINIMAL_STACK_SIZE, NULL, 1, NULL);
   taskFunction : t1t1_Main
   테스크이름 : NULL
   사용할 스택크기 : configMINIMAL_STACK_SIZE
   함수 실행 시 넘겨줄 인자 :NULL
   테스크 우선 순위 : 1(숫자가 높을 수록 높은 순위)
   테스크 핸들 : NULL

2) xTaskStartScheduler() : 운영체제 동작 시작
3) vPrintSring() : Serial.print와 동일
4) vTaskDelay() : 쓰레드에서 딜레이함수 (기존 딜레이시 다른 동작이 불가능했던 것에 비해 동시동작이가능) 		



 